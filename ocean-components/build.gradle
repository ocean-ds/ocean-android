apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def versionNameProp = ""

task loadVersionName() {
    def VERSION_NAME = 'VERSION_NAME'

    Properties props = new Properties()
    def propFile = file('version.properties')

    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))

        if (props != null && props.containsKey(VERSION_NAME)) {
            versionNameProp = props[VERSION_NAME].toString()
        }
    }
}

android {
    compileSdkVersion rootProject.ext.compileSDK

    defaultConfig {
        minSdkVersion rootProject.ext.minSDK
        targetSdkVersion rootProject.ext.targetSDK

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = rootProject.ext.kotlinCompilerExtensionVersion
    }

    compileOptions {
        sourceCompatibility = 17
        targetCompatibility = 17
    }
    namespace 'br.com.useblu.oceands'

}

afterEvaluate {
    publishing {
        def gprBaseUrl = "https://maven.pkg.github.com"
        def gprRepoOwner = "ocean-ds"
        def gprRepoId = "ocean-android"

        def gprUser = System.getenv("GPR_USER")
        def gprApiKey = System.getenv("GPR_API_KEY")

        repositories {
            maven {
                name = "ocean-android"
                url = uri("$gprBaseUrl/$gprRepoOwner/$gprRepoId")
                credentials {
                    username = gprUser
                    password = gprApiKey
                }
            }
        }

        def mavenGroupId = "br.com.useblu"
        def mavenArtifactId = project.name

        publications {
            release(MavenPublication) {
                from components.release
                groupId = mavenGroupId
                artifactId = mavenArtifactId
                version = versionNameProp
            }
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.appcompat:appcompat:1.6.1"
    api 'com.github.skydoves:balloon:1.5.2'
    api 'com.google.android.material:material:1.8.0'
    api 'com.github.concretesolutions:canarinho:2.0.2'
    api 'com.github.bumptech.glide:glide:4.15.1'
    api 'me.relex:circleindicator:2.1.6'
    api 'org.imaginativeworld.whynotimagecarousel:whynotimagecarousel:2.0.4'
    api 'com.github.florent37:expansionpanel:1.2.4'
    api 'com.github.prolificinteractive:material-calendarview:2.0.1'
    api 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation "com.github.EudyContreras:Skeleton-Bones:v1.4.5"

    // COMPOSE
    def composeBom = platform("androidx.compose:compose-bom:$composeBomVersion")
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.ui:ui-viewbinding'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.compose.runtime:runtime-livedata'
}